<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="Template_Author" content="John Cox">
<title>SRS: 3.0 Software Requirements</title>
</head>
<body>
<h1>3.0 Software Requirements</h1>

<h2><a name="behav">3.1 Behavioral Requirements</a></h2>

  <p>This section details various behaviors manifested by Chameleon.  As actual design of this IDE is under construction, these are certainly not exhaustive nor set in stone.</p>

  <h3><a name="3.1.1">3.1.1</a> Master Control Switch</h3>
  The application shall allow control over available features.
  <p><p>The application will allow the instructor / administrator control how many features the users are allowed to see.  In a single-user instructor-free environment, this feature is rendered nearly pointless.  The full functionality of this behavior is thus: the instructor / administrator will communicate with the program which features are currently enabled.  Chameleon will then allow the user to activate the allowed features.  Features not enabled by the instructor will remain invisible to the user.  The exact interactivity with the instructor / administrator is unclear at this point.</p></p>

  <h3><a name="3.1.2">3.1.2</a> Termianl Experience</h3>
  The application shall include a terminal like experience.
  <p><p>The application will include a terminal window with access to an expected Linux server.  The user wil be presented with command-line access to the Linux server currently attached to.  This feature may or may not be disabled by default, regardless of a master switch, when running on a stand-alone client.  Ability to use the command line is purely dependent on user, as Chameleon does not guarantee help or tutorials for using the terminal.</p></p>

  <h3><a name="3.1.3">3.1.3</a> Debugging</h3>
  The product provide debugging capabilities.
  <p><p>The application will provide either base-level debugging ability (considered here as error detection and reporting while compiling code) or extended debugging ability.  This functionality has been defined as the ability to step code line by line, stepping over lines of code, or executing whole functions / blocks of code but waiting for a step command at the next line after the block, or stopping execution at defined break-points.  The user will be given the ability to do this through keyboard shortcuts (typically function keys) or through buttons.  The ability of the user to use this feature is dependent on two things: 1) the master switch enabling these features and the features having been selected by the user, 2) the user's ability to comprehend and apply this tool.  While using this tool, the user will be presented with customizable information communicating 1) position in the program currently about to be 'stepped', 2) status of immediate variables in the line, 3) status of other user-entered variables, 4) the error code and text, if the stepped line generated an error, 5) ability to continue running the program without debugging or terminating the debugger.</p></p>

  <h3><a name="3.1.4">3.1.4</a> Code Completion</h3>
  The product shall perform code completion.
  <p><p>The application will attempt to assist in completing code-tokens based on the initial characters as entered by the user.  While the user is typing code, when the application sees a recognizable set of characters, the application will then suggest the remaining line to the user in the form of selected / highlighted text following the current cursor point.  The user may then press the 'Return' key to accept the text and the cursor will jump to the point after the selection.  If the user continues typing, the selection will change based on the continued stream of characters.  If the entered characters no longer match any known pattern, the selection will terminate.  Otherwise the selection will be consistently updated with the closest matching pattern until one of the two conditions mentioned before occur.</p></p>

  <h3><a name="3.1.5">3.1.5</a> Syntax Highlighting</h3>
  The product shall perform syntactical highlighting.
  <p><p>The application will visually color special words based on a predefined library of terms and an associated color.  As the user enters code, the application will color certain words that it is able to recognize.  The significance of the color is based on the language being implemented in the IDE (C++).  For example, typing the word 'int' will result in a color, yet typing 'integral' will not (until the 'e' is reached after the 't', the application will assume 'int' is being typed and will highlight 'int' until 'e' is typed).</p></p>

  <h3><a name="3.1.6">3.1.6</a> Project Management</h3>
  The product shall be able to handle and manage mulitple file projects.
  <p><p>The application will be able to manage user defined projects consisting of more than just one source code file.  The product will be able to properly compile such projects, and be able to debug them.  Exact details of this feature will be detailed in later iterations.</p></p>

  <h3><a name="3.1.7">3.1.7</a> Generic Editor Behaviors</h3>
  The product shall perform generic editing capabilities.
  <p><p>The application will support either base or custom models for printing, saving, or loading.  The user will be presented with both menu-items and buttons that access these features.  The save button may or may not be active based on the application's ability to see changes from the originally loaded file.  Printing a current active window assumes there is a printer attached and installed to the computer from which the application is running.  Interactivity with the printer is based entirely on the application's ability to communicate to the operating system what to print, and errors in printing will be at fault of the operating system being unable to properly communicate with the attached printer.  To load a file, the user will be presented with a common 'Open File' dialogue box from which the user will be able to select supported file types (or, optionally, all files types).  Problems with loading a selected file will result in an error dialogue with the error number and descriptive text.  Saving will be identical to loading, only with the intent of writing information to the disk rather than retrieving.  The application does not guarantee other programs abilities to read or correctly modify files saved by the application.</p></p>


<hr>
<center>
<table summary="navigation">
<tr>
<td height="100" width="60"><a href="../index.html"><img src=
"../images/home.gif" align="BOTTOM" alt="Home" border="0"></a>
</td>
<td height="100" width="60"><a href="srs.htm"><img src=
"../images/toc.gif" align="BOTTOM" alt="TOC" border="0"></a></td>
<td height="100" width="60"><a href="srs_20.htm"><img src=
"../images/prev.gif" align="BOTTOM" alt="Prev" border="0"></a>
</td>
<td height="100" width="60"><a href="srs_32.htm"><img src=
"../images/next.gif" align="BOTTOM" alt="Next" border="0"></a>
</td>
</tr>
</table>
</center>

Document modified on 

<script type="text/javascript" language="JavaScript">
<!--
        document.write(document.lastModified + " GMT")
// -->
</script>
</body>
</html>

